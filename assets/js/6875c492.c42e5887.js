"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[610],{9703:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(7294),n=a(5999),l=a(2244);function o(e){const{metadata:t}=e,{previousPage:a,nextPage:o}=t;return r.createElement("nav",{className:"pagination-nav","aria-label":(0,n.I)({id:"theme.blog.paginator.navAriaLabel",message:"Blog list page navigation",description:"The ARIA label for the blog pagination"})},a&&r.createElement(l.Z,{permalink:a,title:r.createElement(n.Z,{id:"theme.blog.paginator.newerEntries",description:"The label used to navigate to the newer blog posts page (previous page)"},"Newer Entries")}),o&&r.createElement(l.Z,{permalink:o,title:r.createElement(n.Z,{id:"theme.blog.paginator.olderEntries",description:"The label used to navigate to the older blog posts page (next page)"},"Older Entries"),isNext:!0}))}},9985:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(7294),n=a(9460),l=a(390);function o(e){let{items:t,component:a=l.Z}=e;return r.createElement(r.Fragment,null,t.map((e=>{let{content:t}=e;return r.createElement(n.n,{key:t.metadata.permalink,content:t},r.createElement(a,null,r.createElement(t,null)))})))}},1714:(e,t,a)=>{a.r(t),a.d(t,{default:()=>b});var r=a(7294),n=a(6010),l=a(5999),o=a(8824),s=a(1944),i=a(5281),c=a(9960),g=a(9058),m=a(9703),p=a(197),d=a(9985);function u(e){const t=function(){const{selectMessage:e}=(0,o.c)();return t=>e(t,(0,l.I)({id:"theme.blog.post.plurals",description:'Pluralized label for "{count} posts". Use as much plural forms (separated by "|") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',message:"One post|{count} posts"},{count:t}))}();return(0,l.I)({id:"theme.blog.tagTitle",description:"The title of the page for a blog tag",message:'{nPosts} tagged with "{tagName}"'},{nPosts:t(e.count),tagName:e.label})}function h(e){let{tag:t}=e;const a=u(t);return r.createElement(r.Fragment,null,r.createElement(s.d,{title:a}),r.createElement(p.Z,{tag:"blog_tags_posts"}))}function f(e){let{tag:t,items:a,sidebar:n,listMetadata:o}=e;const s=u(t);return r.createElement(g.Z,{sidebar:n},r.createElement("header",{className:"margin-bottom--xl"},r.createElement("h1",null,s),r.createElement(c.Z,{href:t.allTagsPath},r.createElement(l.Z,{id:"theme.tags.tagsPageLink",description:"The label of the link targeting the tag list page"},"View All Tags"))),r.createElement(d.Z,{items:a}),r.createElement(m.Z,{metadata:o}))}function b(e){return r.createElement(s.FG,{className:(0,n.Z)(i.k.wrapper.blogPages,i.k.page.blogTagPostListPage)},r.createElement(h,e),r.createElement(f,e))}},2313:(e,t,a)=>{a.d(t,{Z:()=>n});var r=a(7294);const n={React:r,...r,diffDatesByDay:(e,t)=>Math.floor(Math.abs(e-t)/864e5),capitalize:e=>e.toUpperCase(),diffArrays:(e,t)=>e.filter((e=>!t.includes(e))),diffArraysWithId:(e,t)=>e&&t&&e.filter((e=>!t.find((t=>e.id===t.id&&t.id)))),generateRandomNumber:(e,t)=>Math.floor(Math.random()*(t-e+1)+e),capitalizeFirstLetter:e=>e&&e.length?e.charAt(0).toUpperCase()+e.slice(1):e,capitalizeAllStartingWords:function(e,t){return void 0===t&&(t=!1),(t?e.toLowerCase():e).replace(/(?:^|\s|[''({])+\S/g,(e=>e.toUpperCase()))},isBlankString:e=>!e||0===e.length||/^\s*$/.test(e),generateRandomString:()=>Math.random().toString(36).slice(2),generateRandomHexColor:()=>`#${Math.floor(16777215*Math.random()).toString(16).padEnd(6,"0")}`,generateRandomBoolean:()=>Math.random()>=.5,coinflip:()=>Math.random()>=.5,isEven:e=>e%2==0,removeAllDuplicates:e=>[...new Set(e)],isArray:e=>Array.isArray(e),mergeArrays:(e,t)=>[...e,...t],isNotEmptyArray:e=>Array.isArray(e)&&e.length>0,safelyParseJson:e=>{try{return JSON.parse(e)}catch{return e}},isEmptyObj:e=>0===Reflect.ownKeys(e).length&&e.constructor===Object,shuffleArray:e=>e.sort((()=>.5-Math.random())),convertSnakeToCamelCase:e=>e.replace(/([-_][a-z])/g,(e=>e.toUpperCase().replace("-","").replace("_",""))),convertRGBToHexColor:(e,t,a)=>"#"+((1<<24)+(e<<16)+(t<<8)+a).toString(16).slice(1),getMinMaxOfArray:e=>[Math.min(...e),Math.max(...e)],sleep:e=>new Promise((t=>setTimeout(t,e))),toObj:e=>Object.fromEntries(e),getUnion:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return[...new Set(t.flat())]},partition:(e,t)=>e.reduce(((e,a)=>(e[t(a)?0:1].push(a),e)),[[],[]])}}}]);